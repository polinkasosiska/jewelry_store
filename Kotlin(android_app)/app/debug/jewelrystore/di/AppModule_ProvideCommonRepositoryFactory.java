// Generated by Dagger (https://dagger.dev).
package com.sysoliatina.jewelrystore.di;

import com.sysoliatina.jewelrystore.data.common.CommonDataSource;
import com.sysoliatina.jewelrystore.data.common.CommonRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCommonRepositoryFactory implements Factory<CommonRepository> {
  private final Provider<CommonDataSource> commonDataSourceProvider;

  public AppModule_ProvideCommonRepositoryFactory(
      Provider<CommonDataSource> commonDataSourceProvider) {
    this.commonDataSourceProvider = commonDataSourceProvider;
  }

  @Override
  public CommonRepository get() {
    return provideCommonRepository(commonDataSourceProvider.get());
  }

  public static AppModule_ProvideCommonRepositoryFactory create(
      Provider<CommonDataSource> commonDataSourceProvider) {
    return new AppModule_ProvideCommonRepositoryFactory(commonDataSourceProvider);
  }

  public static CommonRepository provideCommonRepository(CommonDataSource commonDataSource) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCommonRepository(commonDataSource));
  }
}
