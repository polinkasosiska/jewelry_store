// Generated by Dagger (https://dagger.dev).
package com.sysoliatina.jewelrystore.di;

import com.sysoliatina.jewelrystore.data.moderator.ModeratorDataSource;
import com.sysoliatina.jewelrystore.data.moderator.ModeratorService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideModeratorDataSourceFactory implements Factory<ModeratorDataSource> {
  private final Provider<ModeratorService> moderatorServiceProvider;

  public AppModule_ProvideModeratorDataSourceFactory(
      Provider<ModeratorService> moderatorServiceProvider) {
    this.moderatorServiceProvider = moderatorServiceProvider;
  }

  @Override
  public ModeratorDataSource get() {
    return provideModeratorDataSource(moderatorServiceProvider.get());
  }

  public static AppModule_ProvideModeratorDataSourceFactory create(
      Provider<ModeratorService> moderatorServiceProvider) {
    return new AppModule_ProvideModeratorDataSourceFactory(moderatorServiceProvider);
  }

  public static ModeratorDataSource provideModeratorDataSource(ModeratorService moderatorService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideModeratorDataSource(moderatorService));
  }
}
