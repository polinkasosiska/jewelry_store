// Generated by Dagger (https://dagger.dev).
package com.sysoliatina.jewelrystore.di;

import com.sysoliatina.jewelrystore.data.client.ClientDataSource;
import com.sysoliatina.jewelrystore.data.client.ClientRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideClientRepositoryFactory implements Factory<ClientRepository> {
  private final Provider<ClientDataSource> clientDataSourceProvider;

  public AppModule_ProvideClientRepositoryFactory(
      Provider<ClientDataSource> clientDataSourceProvider) {
    this.clientDataSourceProvider = clientDataSourceProvider;
  }

  @Override
  public ClientRepository get() {
    return provideClientRepository(clientDataSourceProvider.get());
  }

  public static AppModule_ProvideClientRepositoryFactory create(
      Provider<ClientDataSource> clientDataSourceProvider) {
    return new AppModule_ProvideClientRepositoryFactory(clientDataSourceProvider);
  }

  public static ClientRepository provideClientRepository(ClientDataSource clientDataSource) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideClientRepository(clientDataSource));
  }
}
