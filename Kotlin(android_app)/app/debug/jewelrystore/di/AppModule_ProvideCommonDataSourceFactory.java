// Generated by Dagger (https://dagger.dev).
package com.sysoliatina.jewelrystore.di;

import com.sysoliatina.jewelrystore.data.common.CommonDataSource;
import com.sysoliatina.jewelrystore.data.common.CommonService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCommonDataSourceFactory implements Factory<CommonDataSource> {
  private final Provider<CommonService> commonServiceProvider;

  public AppModule_ProvideCommonDataSourceFactory(Provider<CommonService> commonServiceProvider) {
    this.commonServiceProvider = commonServiceProvider;
  }

  @Override
  public CommonDataSource get() {
    return provideCommonDataSource(commonServiceProvider.get());
  }

  public static AppModule_ProvideCommonDataSourceFactory create(
      Provider<CommonService> commonServiceProvider) {
    return new AppModule_ProvideCommonDataSourceFactory(commonServiceProvider);
  }

  public static CommonDataSource provideCommonDataSource(CommonService commonService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCommonDataSource(commonService));
  }
}
