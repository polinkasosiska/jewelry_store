// Generated by Dagger (https://dagger.dev).
package com.sysoliatina.jewelrystore.domain.login;

import com.sysoliatina.jewelrystore.data.common.CommonRepository;
import com.sysoliatina.jewelrystore.sharedPreferences.PrefsUtils;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthUseCase_Factory implements Factory<AuthUseCase> {
  private final Provider<CommonRepository> repositoryProvider;

  private final Provider<PrefsUtils> prefsUtilsProvider;

  public AuthUseCase_Factory(Provider<CommonRepository> repositoryProvider,
      Provider<PrefsUtils> prefsUtilsProvider) {
    this.repositoryProvider = repositoryProvider;
    this.prefsUtilsProvider = prefsUtilsProvider;
  }

  @Override
  public AuthUseCase get() {
    return newInstance(repositoryProvider.get(), prefsUtilsProvider.get());
  }

  public static AuthUseCase_Factory create(Provider<CommonRepository> repositoryProvider,
      Provider<PrefsUtils> prefsUtilsProvider) {
    return new AuthUseCase_Factory(repositoryProvider, prefsUtilsProvider);
  }

  public static AuthUseCase newInstance(CommonRepository repository, PrefsUtils prefsUtils) {
    return new AuthUseCase(repository, prefsUtils);
  }
}
